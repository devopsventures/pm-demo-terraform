name: Terraform Generate Plan
on:
  workflow_dispatch:
    inputs:
      version:
        description: The version of the container to deploy
        required: true
        default: latest

jobs:
  terraform_generate_plan:
    name: Terraform Generate Plan

    runs-on: ubuntu-20.04

    # Set a timeout on the run
    timeout-minutes: 5

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v1.0.1
        with:
          terraform_version: 0.12.29
          terraform_wrapper: true

      - name: Setup Terragrunt
        uses: autero1/action-terragrunt@v0.1.0
        with:
          terragrunt_version: 0.23.32

      - name: Authenticate with GCP
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@0.1.3
        with:
          version: 303.0.0
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_TERRAFORM_SERVICE_ACCOUNT_KEY }}
          export_default_credentials: true

      - name: Terraform Init
        run: terragrunt init

      - name: Terraform Validate
        run: terragrunt validate -no-color

      - name: Terraform Plan
        id: plan
        env:
          TF_VAR_PROJECT: ${{ secrets.GCP_PROJECT }}
        run: terraform plan -no-color -out terraform_plan

      - name: Generate GitHub Actions Run Details
        uses: actions/github-script@v2
        with:
          script: |
            const path = require('path')
              , fs = require('fs')
              ;

            const payload = {
              run_id: process.env.GITHUB_RUN_ID
            };

            fs.writeFileSync(path.join(process.env.GITHUB_WORKSPACE, 'actions.json'), JSON.stringify(payload, null, 2));

      - name: Save Plan
        uses: actions/upload-artifact@v2
        with:
          name: plan
          path: |
            terraform_plan
            actions.json